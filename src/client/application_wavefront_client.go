// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"client/access_policy"
	"client/account_user_and_service_account"
	"client/alert"
	"client/alert_analytics"
	"client/api_token"
	"client/cloud_integration"
	"client/dashboard"
	"client/derived_metric"
	"client/direct_ingestion"
	"client/event"
	"client/external_link"
	"client/ingestion_spy"
	"client/integration"
	"client/maintenance_window"
	"client/message"
	"client/metric"
	"client/metrics_policy"
	"client/monitored_application"
	"client/monitored_service"
	"client/notificant"
	"client/proxy"
	"client/query"
	"client/recent_app_map_search"
	"client/recent_traces_search"
	"client/role"
	"client/saved_app_map_search"
	"client/saved_app_map_search_group"
	"client/saved_search"
	"client/saved_traces_search"
	"client/saved_traces_search_group"
	"client/search"
	"client/source"
	"client/span_sampling_policy"
	"client/usage"
	"client/user"
	"client/user_group"
	"client/webhook"
)

// Default application wavefront HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new application wavefront HTTP client.
func NewHTTPClient(formats strfmt.Registry) *ApplicationWavefront {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new application wavefront HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *ApplicationWavefront {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new application wavefront client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *ApplicationWavefront {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(ApplicationWavefront)
	cli.Transport = transport
	cli.AccessPolicy = access_policy.New(transport, formats)
	cli.AccountUserAndServiceAccount = account_user_and_service_account.New(transport, formats)
	cli.Alert = alert.New(transport, formats)
	cli.AlertAnalytics = alert_analytics.New(transport, formats)
	cli.APIToken = api_token.New(transport, formats)
	cli.CloudIntegration = cloud_integration.New(transport, formats)
	cli.Dashboard = dashboard.New(transport, formats)
	cli.DerivedMetric = derived_metric.New(transport, formats)
	cli.DirectIngestion = direct_ingestion.New(transport, formats)
	cli.Event = event.New(transport, formats)
	cli.ExternalLink = external_link.New(transport, formats)
	cli.IngestionSpy = ingestion_spy.New(transport, formats)
	cli.Integration = integration.New(transport, formats)
	cli.MaintenanceWindow = maintenance_window.New(transport, formats)
	cli.Message = message.New(transport, formats)
	cli.Metric = metric.New(transport, formats)
	cli.MetricsPolicy = metrics_policy.New(transport, formats)
	cli.MonitoredApplication = monitored_application.New(transport, formats)
	cli.MonitoredService = monitored_service.New(transport, formats)
	cli.Notificant = notificant.New(transport, formats)
	cli.Proxy = proxy.New(transport, formats)
	cli.Query = query.New(transport, formats)
	cli.RecentAppMapSearch = recent_app_map_search.New(transport, formats)
	cli.RecentTracesSearch = recent_traces_search.New(transport, formats)
	cli.Role = role.New(transport, formats)
	cli.SavedAppMapSearch = saved_app_map_search.New(transport, formats)
	cli.SavedAppMapSearchGroup = saved_app_map_search_group.New(transport, formats)
	cli.SavedSearch = saved_search.New(transport, formats)
	cli.SavedTracesSearch = saved_traces_search.New(transport, formats)
	cli.SavedTracesSearchGroup = saved_traces_search_group.New(transport, formats)
	cli.Search = search.New(transport, formats)
	cli.Source = source.New(transport, formats)
	cli.SpanSamplingPolicy = span_sampling_policy.New(transport, formats)
	cli.Usage = usage.New(transport, formats)
	cli.User = user.New(transport, formats)
	cli.UserGroup = user_group.New(transport, formats)
	cli.Webhook = webhook.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// ApplicationWavefront is a client for application wavefront
type ApplicationWavefront struct {
	AccessPolicy access_policy.ClientService

	AccountUserAndServiceAccount account_user_and_service_account.ClientService

	Alert alert.ClientService

	AlertAnalytics alert_analytics.ClientService

	APIToken api_token.ClientService

	CloudIntegration cloud_integration.ClientService

	Dashboard dashboard.ClientService

	DerivedMetric derived_metric.ClientService

	DirectIngestion direct_ingestion.ClientService

	Event event.ClientService

	ExternalLink external_link.ClientService

	IngestionSpy ingestion_spy.ClientService

	Integration integration.ClientService

	MaintenanceWindow maintenance_window.ClientService

	Message message.ClientService

	Metric metric.ClientService

	MetricsPolicy metrics_policy.ClientService

	MonitoredApplication monitored_application.ClientService

	MonitoredService monitored_service.ClientService

	Notificant notificant.ClientService

	Proxy proxy.ClientService

	Query query.ClientService

	RecentAppMapSearch recent_app_map_search.ClientService

	RecentTracesSearch recent_traces_search.ClientService

	Role role.ClientService

	SavedAppMapSearch saved_app_map_search.ClientService

	SavedAppMapSearchGroup saved_app_map_search_group.ClientService

	SavedSearch saved_search.ClientService

	SavedTracesSearch saved_traces_search.ClientService

	SavedTracesSearchGroup saved_traces_search_group.ClientService

	Search search.ClientService

	Source source.ClientService

	SpanSamplingPolicy span_sampling_policy.ClientService

	Usage usage.ClientService

	User user.ClientService

	UserGroup user_group.ClientService

	Webhook webhook.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *ApplicationWavefront) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AccessPolicy.SetTransport(transport)
	c.AccountUserAndServiceAccount.SetTransport(transport)
	c.Alert.SetTransport(transport)
	c.AlertAnalytics.SetTransport(transport)
	c.APIToken.SetTransport(transport)
	c.CloudIntegration.SetTransport(transport)
	c.Dashboard.SetTransport(transport)
	c.DerivedMetric.SetTransport(transport)
	c.DirectIngestion.SetTransport(transport)
	c.Event.SetTransport(transport)
	c.ExternalLink.SetTransport(transport)
	c.IngestionSpy.SetTransport(transport)
	c.Integration.SetTransport(transport)
	c.MaintenanceWindow.SetTransport(transport)
	c.Message.SetTransport(transport)
	c.Metric.SetTransport(transport)
	c.MetricsPolicy.SetTransport(transport)
	c.MonitoredApplication.SetTransport(transport)
	c.MonitoredService.SetTransport(transport)
	c.Notificant.SetTransport(transport)
	c.Proxy.SetTransport(transport)
	c.Query.SetTransport(transport)
	c.RecentAppMapSearch.SetTransport(transport)
	c.RecentTracesSearch.SetTransport(transport)
	c.Role.SetTransport(transport)
	c.SavedAppMapSearch.SetTransport(transport)
	c.SavedAppMapSearchGroup.SetTransport(transport)
	c.SavedSearch.SetTransport(transport)
	c.SavedTracesSearch.SetTransport(transport)
	c.SavedTracesSearchGroup.SetTransport(transport)
	c.Search.SetTransport(transport)
	c.Source.SetTransport(transport)
	c.SpanSamplingPolicy.SetTransport(transport)
	c.Usage.SetTransport(transport)
	c.User.SetTransport(transport)
	c.UserGroup.SetTransport(transport)
	c.Webhook.SetTransport(transport)
}
