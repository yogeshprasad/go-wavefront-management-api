// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteWebhookParams creates a new DeleteWebhookParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteWebhookParams() *DeleteWebhookParams {
	return &DeleteWebhookParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteWebhookParamsWithTimeout creates a new DeleteWebhookParams object
// with the ability to set a timeout on a request.
func NewDeleteWebhookParamsWithTimeout(timeout time.Duration) *DeleteWebhookParams {
	return &DeleteWebhookParams{
		timeout: timeout,
	}
}

// NewDeleteWebhookParamsWithContext creates a new DeleteWebhookParams object
// with the ability to set a context for a request.
func NewDeleteWebhookParamsWithContext(ctx context.Context) *DeleteWebhookParams {
	return &DeleteWebhookParams{
		Context: ctx,
	}
}

// NewDeleteWebhookParamsWithHTTPClient creates a new DeleteWebhookParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteWebhookParamsWithHTTPClient(client *http.Client) *DeleteWebhookParams {
	return &DeleteWebhookParams{
		HTTPClient: client,
	}
}

/*
DeleteWebhookParams contains all the parameters to send to the API endpoint

	for the delete webhook operation.

	Typically these are written to a http.Request.
*/
type DeleteWebhookParams struct {

	// ID.
	ID string

	// Unlink.
	Unlink *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete webhook params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWebhookParams) WithDefaults() *DeleteWebhookParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete webhook params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteWebhookParams) SetDefaults() {
	var (
		unlinkDefault = bool(false)
	)

	val := DeleteWebhookParams{
		Unlink: &unlinkDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the delete webhook params
func (o *DeleteWebhookParams) WithTimeout(timeout time.Duration) *DeleteWebhookParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete webhook params
func (o *DeleteWebhookParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete webhook params
func (o *DeleteWebhookParams) WithContext(ctx context.Context) *DeleteWebhookParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete webhook params
func (o *DeleteWebhookParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete webhook params
func (o *DeleteWebhookParams) WithHTTPClient(client *http.Client) *DeleteWebhookParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete webhook params
func (o *DeleteWebhookParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the delete webhook params
func (o *DeleteWebhookParams) WithID(id string) *DeleteWebhookParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete webhook params
func (o *DeleteWebhookParams) SetID(id string) {
	o.ID = id
}

// WithUnlink adds the unlink to the delete webhook params
func (o *DeleteWebhookParams) WithUnlink(unlink *bool) *DeleteWebhookParams {
	o.SetUnlink(unlink)
	return o
}

// SetUnlink adds the unlink to the delete webhook params
func (o *DeleteWebhookParams) SetUnlink(unlink *bool) {
	o.Unlink = unlink
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteWebhookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Unlink != nil {

		// query param unlink
		var qrUnlink bool

		if o.Unlink != nil {
			qrUnlink = *o.Unlink
		}
		qUnlink := swag.FormatBool(qrUnlink)
		if qUnlink != "" {

			if err := r.SetQueryParam("unlink", qUnlink); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
