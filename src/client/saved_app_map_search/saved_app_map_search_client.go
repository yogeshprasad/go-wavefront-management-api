// Code generated by go-swagger; DO NOT EDIT.

package saved_app_map_search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new saved app map search API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for saved app map search API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateSavedAppMapSearch(params *CreateSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateSavedAppMapSearchOK, error)

	DefaultAppMapSearch1(params *DefaultAppMapSearch1Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DefaultAppMapSearch1OK, error)

	DefaultAppMapSearch3(params *DefaultAppMapSearch3Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DefaultAppMapSearch3OK, error)

	DefaultCustomerAppMapSearch(params *DefaultCustomerAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DefaultCustomerAppMapSearchOK, error)

	DeleteSavedAppMapSearch(params *DeleteSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteSavedAppMapSearchOK, error)

	DeleteSavedAppMapSearchForUser(params *DeleteSavedAppMapSearchForUserParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteSavedAppMapSearchForUserOK, error)

	GetAllSavedAppMapSearches(params *GetAllSavedAppMapSearchesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAllSavedAppMapSearchesOK, error)

	GetAllSavedAppMapSearchesForUser(params *GetAllSavedAppMapSearchesForUserParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAllSavedAppMapSearchesForUserOK, error)

	GetSavedAppMapSearch(params *GetSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetSavedAppMapSearchOK, error)

	UpdateSavedAppMapSearch(params *UpdateSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateSavedAppMapSearchOK, error)

	UpdateSavedAppMapSearchForUser(params *UpdateSavedAppMapSearchForUserParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateSavedAppMapSearchForUserOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateSavedAppMapSearch creates a search
*/
func (a *Client) CreateSavedAppMapSearch(params *CreateSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateSavedAppMapSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateSavedAppMapSearchParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createSavedAppMapSearch",
		Method:             "POST",
		PathPattern:        "/api/v2/savedappmapsearch",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateSavedAppMapSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateSavedAppMapSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createSavedAppMapSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DefaultAppMapSearch1 sets default app map search at user level
*/
func (a *Client) DefaultAppMapSearch1(params *DefaultAppMapSearch1Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DefaultAppMapSearch1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDefaultAppMapSearch1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "defaultAppMapSearch_1",
		Method:             "POST",
		PathPattern:        "/api/v2/savedappmapsearch/defaultAppMapSearch",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DefaultAppMapSearch1Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DefaultAppMapSearch1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for defaultAppMapSearch_1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DefaultAppMapSearch3 gets default app map search for a user
*/
func (a *Client) DefaultAppMapSearch3(params *DefaultAppMapSearch3Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DefaultAppMapSearch3OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDefaultAppMapSearch3Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "defaultAppMapSearch_3",
		Method:             "GET",
		PathPattern:        "/api/v2/savedappmapsearch/defaultAppMapSearch",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DefaultAppMapSearch3Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DefaultAppMapSearch3OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for defaultAppMapSearch_3: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DefaultCustomerAppMapSearch sets default app map search at customer level
*/
func (a *Client) DefaultCustomerAppMapSearch(params *DefaultCustomerAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DefaultCustomerAppMapSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDefaultCustomerAppMapSearchParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "defaultCustomerAppMapSearch",
		Method:             "POST",
		PathPattern:        "/api/v2/savedappmapsearch/defaultCustomerAppMapSearch",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DefaultCustomerAppMapSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DefaultCustomerAppMapSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for defaultCustomerAppMapSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteSavedAppMapSearch deletes a search
*/
func (a *Client) DeleteSavedAppMapSearch(params *DeleteSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteSavedAppMapSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteSavedAppMapSearchParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteSavedAppMapSearch",
		Method:             "DELETE",
		PathPattern:        "/api/v2/savedappmapsearch/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteSavedAppMapSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteSavedAppMapSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteSavedAppMapSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteSavedAppMapSearchForUser deletes a search belonging to the user
*/
func (a *Client) DeleteSavedAppMapSearchForUser(params *DeleteSavedAppMapSearchForUserParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteSavedAppMapSearchForUserOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteSavedAppMapSearchForUserParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteSavedAppMapSearchForUser",
		Method:             "DELETE",
		PathPattern:        "/api/v2/savedappmapsearch/owned/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteSavedAppMapSearchForUserReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteSavedAppMapSearchForUserOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteSavedAppMapSearchForUser: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAllSavedAppMapSearches gets all searches for a customer
*/
func (a *Client) GetAllSavedAppMapSearches(params *GetAllSavedAppMapSearchesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAllSavedAppMapSearchesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAllSavedAppMapSearchesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAllSavedAppMapSearches",
		Method:             "GET",
		PathPattern:        "/api/v2/savedappmapsearch",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAllSavedAppMapSearchesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAllSavedAppMapSearchesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAllSavedAppMapSearches: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAllSavedAppMapSearchesForUser gets all searches for a user
*/
func (a *Client) GetAllSavedAppMapSearchesForUser(params *GetAllSavedAppMapSearchesForUserParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAllSavedAppMapSearchesForUserOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAllSavedAppMapSearchesForUserParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAllSavedAppMapSearchesForUser",
		Method:             "GET",
		PathPattern:        "/api/v2/savedappmapsearch/owned",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAllSavedAppMapSearchesForUserReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAllSavedAppMapSearchesForUserOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAllSavedAppMapSearchesForUser: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetSavedAppMapSearch gets a specific search
*/
func (a *Client) GetSavedAppMapSearch(params *GetSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetSavedAppMapSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetSavedAppMapSearchParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getSavedAppMapSearch",
		Method:             "GET",
		PathPattern:        "/api/v2/savedappmapsearch/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetSavedAppMapSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetSavedAppMapSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getSavedAppMapSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateSavedAppMapSearch updates a search
*/
func (a *Client) UpdateSavedAppMapSearch(params *UpdateSavedAppMapSearchParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateSavedAppMapSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateSavedAppMapSearchParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "updateSavedAppMapSearch",
		Method:             "PUT",
		PathPattern:        "/api/v2/savedappmapsearch/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateSavedAppMapSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateSavedAppMapSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateSavedAppMapSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateSavedAppMapSearchForUser updates a search belonging to the user
*/
func (a *Client) UpdateSavedAppMapSearchForUser(params *UpdateSavedAppMapSearchForUserParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateSavedAppMapSearchForUserOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateSavedAppMapSearchForUserParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "updateSavedAppMapSearchForUser",
		Method:             "PUT",
		PathPattern:        "/api/v2/savedappmapsearch/owned/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateSavedAppMapSearchForUserReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateSavedAppMapSearchForUserOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateSavedAppMapSearchForUser: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
