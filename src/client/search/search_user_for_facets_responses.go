// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// SearchUserForFacetsReader is a Reader for the SearchUserForFacets structure.
type SearchUserForFacetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchUserForFacetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchUserForFacetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchUserForFacetsOK creates a SearchUserForFacetsOK with default headers values
func NewSearchUserForFacetsOK() *SearchUserForFacetsOK {
	return &SearchUserForFacetsOK{}
}

/*
SearchUserForFacetsOK describes a response with status code 200, with default header values.

successful operation
*/
type SearchUserForFacetsOK struct {
	Payload *models.ResponseContainerFacetsResponseContainer
}

// IsSuccess returns true when this search user for facets o k response has a 2xx status code
func (o *SearchUserForFacetsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search user for facets o k response has a 3xx status code
func (o *SearchUserForFacetsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search user for facets o k response has a 4xx status code
func (o *SearchUserForFacetsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search user for facets o k response has a 5xx status code
func (o *SearchUserForFacetsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search user for facets o k response a status code equal to that given
func (o *SearchUserForFacetsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchUserForFacetsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/search/user/facets][%d] searchUserForFacetsOK  %+v", 200, o.Payload)
}

func (o *SearchUserForFacetsOK) String() string {
	return fmt.Sprintf("[POST /api/v2/search/user/facets][%d] searchUserForFacetsOK  %+v", 200, o.Payload)
}

func (o *SearchUserForFacetsOK) GetPayload() *models.ResponseContainerFacetsResponseContainer {
	return o.Payload
}

func (o *SearchUserForFacetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseContainerFacetsResponseContainer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
