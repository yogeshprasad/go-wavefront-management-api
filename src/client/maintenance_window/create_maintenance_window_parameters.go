// Code generated by go-swagger; DO NOT EDIT.

package maintenance_window

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"models"
)

// NewCreateMaintenanceWindowParams creates a new CreateMaintenanceWindowParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateMaintenanceWindowParams() *CreateMaintenanceWindowParams {
	return &CreateMaintenanceWindowParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateMaintenanceWindowParamsWithTimeout creates a new CreateMaintenanceWindowParams object
// with the ability to set a timeout on a request.
func NewCreateMaintenanceWindowParamsWithTimeout(timeout time.Duration) *CreateMaintenanceWindowParams {
	return &CreateMaintenanceWindowParams{
		timeout: timeout,
	}
}

// NewCreateMaintenanceWindowParamsWithContext creates a new CreateMaintenanceWindowParams object
// with the ability to set a context for a request.
func NewCreateMaintenanceWindowParamsWithContext(ctx context.Context) *CreateMaintenanceWindowParams {
	return &CreateMaintenanceWindowParams{
		Context: ctx,
	}
}

// NewCreateMaintenanceWindowParamsWithHTTPClient creates a new CreateMaintenanceWindowParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateMaintenanceWindowParamsWithHTTPClient(client *http.Client) *CreateMaintenanceWindowParams {
	return &CreateMaintenanceWindowParams{
		HTTPClient: client,
	}
}

/*
CreateMaintenanceWindowParams contains all the parameters to send to the API endpoint

	for the create maintenance window operation.

	Typically these are written to a http.Request.
*/
type CreateMaintenanceWindowParams struct {

	/* Body.

	     Example Body:
	<pre>{
	  "reason": "MW Reason",
	  "title": "MW Title",
	  "startTimeInSeconds": 1483228800,
	  "endTimeInSeconds": 1483232400,
	  "relevantCustomerTags": [
	    "alertId1"
	  ],
	  "relevantHostTags": [
	    "sourceTag1"
	  ]
	}</pre>
	*/
	Body *models.MaintenanceWindow

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create maintenance window params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateMaintenanceWindowParams) WithDefaults() *CreateMaintenanceWindowParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create maintenance window params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateMaintenanceWindowParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create maintenance window params
func (o *CreateMaintenanceWindowParams) WithTimeout(timeout time.Duration) *CreateMaintenanceWindowParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create maintenance window params
func (o *CreateMaintenanceWindowParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create maintenance window params
func (o *CreateMaintenanceWindowParams) WithContext(ctx context.Context) *CreateMaintenanceWindowParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create maintenance window params
func (o *CreateMaintenanceWindowParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create maintenance window params
func (o *CreateMaintenanceWindowParams) WithHTTPClient(client *http.Client) *CreateMaintenanceWindowParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create maintenance window params
func (o *CreateMaintenanceWindowParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create maintenance window params
func (o *CreateMaintenanceWindowParams) WithBody(body *models.MaintenanceWindow) *CreateMaintenanceWindowParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create maintenance window params
func (o *CreateMaintenanceWindowParams) SetBody(body *models.MaintenanceWindow) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *CreateMaintenanceWindowParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
