// Code generated by go-swagger; DO NOT EDIT.

package cloud_integration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteCloudIntegrationParams creates a new DeleteCloudIntegrationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteCloudIntegrationParams() *DeleteCloudIntegrationParams {
	return &DeleteCloudIntegrationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCloudIntegrationParamsWithTimeout creates a new DeleteCloudIntegrationParams object
// with the ability to set a timeout on a request.
func NewDeleteCloudIntegrationParamsWithTimeout(timeout time.Duration) *DeleteCloudIntegrationParams {
	return &DeleteCloudIntegrationParams{
		timeout: timeout,
	}
}

// NewDeleteCloudIntegrationParamsWithContext creates a new DeleteCloudIntegrationParams object
// with the ability to set a context for a request.
func NewDeleteCloudIntegrationParamsWithContext(ctx context.Context) *DeleteCloudIntegrationParams {
	return &DeleteCloudIntegrationParams{
		Context: ctx,
	}
}

// NewDeleteCloudIntegrationParamsWithHTTPClient creates a new DeleteCloudIntegrationParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteCloudIntegrationParamsWithHTTPClient(client *http.Client) *DeleteCloudIntegrationParams {
	return &DeleteCloudIntegrationParams{
		HTTPClient: client,
	}
}

/*
DeleteCloudIntegrationParams contains all the parameters to send to the API endpoint

	for the delete cloud integration operation.

	Typically these are written to a http.Request.
*/
type DeleteCloudIntegrationParams struct {

	// ID.
	ID string

	// SkipTrash.
	SkipTrash *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete cloud integration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCloudIntegrationParams) WithDefaults() *DeleteCloudIntegrationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete cloud integration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCloudIntegrationParams) SetDefaults() {
	var (
		skipTrashDefault = bool(false)
	)

	val := DeleteCloudIntegrationParams{
		SkipTrash: &skipTrashDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) WithTimeout(timeout time.Duration) *DeleteCloudIntegrationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) WithContext(ctx context.Context) *DeleteCloudIntegrationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) WithHTTPClient(client *http.Client) *DeleteCloudIntegrationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) WithID(id string) *DeleteCloudIntegrationParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) SetID(id string) {
	o.ID = id
}

// WithSkipTrash adds the skipTrash to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) WithSkipTrash(skipTrash *bool) *DeleteCloudIntegrationParams {
	o.SetSkipTrash(skipTrash)
	return o
}

// SetSkipTrash adds the skipTrash to the delete cloud integration params
func (o *DeleteCloudIntegrationParams) SetSkipTrash(skipTrash *bool) {
	o.SkipTrash = skipTrash
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCloudIntegrationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.SkipTrash != nil {

		// query param skipTrash
		var qrSkipTrash bool

		if o.SkipTrash != nil {
			qrSkipTrash = *o.SkipTrash
		}
		qSkipTrash := swag.FormatBool(qrSkipTrash)
		if qSkipTrash != "" {

			if err := r.SetQueryParam("skipTrash", qSkipTrash); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
