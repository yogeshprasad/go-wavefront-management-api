// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureBaseCredentials azure base credentials
//
// swagger:model AzureBaseCredentials
type AzureBaseCredentials struct {

	// Client Id for an Azure service account within your project.
	// Required: true
	ClientID *string `json:"clientId"`

	// Client Secret for an Azure service account within your project. Use 'saved_secret' to retain the client secret when updating.
	// Required: true
	ClientSecret *string `json:"clientSecret"`

	// Tenant Id for an Azure service account within your project.
	// Required: true
	Tenant *string `json:"tenant"`
}

// Validate validates this azure base credentials
func (m *AzureBaseCredentials) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenant(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureBaseCredentials) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("clientId", "body", m.ClientID); err != nil {
		return err
	}

	return nil
}

func (m *AzureBaseCredentials) validateClientSecret(formats strfmt.Registry) error {

	if err := validate.Required("clientSecret", "body", m.ClientSecret); err != nil {
		return err
	}

	return nil
}

func (m *AzureBaseCredentials) validateTenant(formats strfmt.Registry) error {

	if err := validate.Required("tenant", "body", m.Tenant); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure base credentials based on context it is used
func (m *AzureBaseCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureBaseCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureBaseCredentials) UnmarshalBinary(b []byte) error {
	var res AzureBaseCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
