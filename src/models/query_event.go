// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// QueryEvent A representation of events as returned by the querying api, rather than the event api
//
// swagger:model QueryEvent
type QueryEvent struct {

	// End time of event, in epoch millis
	End int64 `json:"end,omitempty"`

	// Sources (hosts) to which the event pertains
	Hosts []string `json:"hosts"`

	// Whether the event is an artificial event generated by a literal expression or alert backtesting, i.e. not stored in the Wavefront backend
	IsEphemeral bool `json:"isEphemeral,omitempty"`

	// Event name
	Name string `json:"name,omitempty"`

	// Start time of event, in epoch millis
	Start int64 `json:"start,omitempty"`

	// In some event queries, multiple events that occur nearly simultaneously are summarized under a single event.  This value specifies the number of events summarized under this one
	Summarized int64 `json:"summarized,omitempty"`

	// Tags (annotations) on the event
	Tags map[string]string `json:"tags,omitempty"`
}

// Validate validates this query event
func (m *QueryEvent) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this query event based on context it is used
func (m *QueryEvent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *QueryEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryEvent) UnmarshalBinary(b []byte) error {
	var res QueryEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
