// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Stripe DTO for wavefront stripe(under anomaly package)
//
// swagger:model Stripe
type Stripe struct {

	// endMs for this stripe
	// Required: true
	EndMs *int64 `json:"endMs"`

	// image link for this stripe
	// Required: true
	ImageLink *string `json:"imageLink"`

	// model for this stripe
	// Required: true
	Model *string `json:"model"`

	// startMs for this stripe
	// Required: true
	StartMs *int64 `json:"startMs"`
}

// Validate validates this stripe
func (m *Stripe) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndMs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImageLink(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartMs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Stripe) validateEndMs(formats strfmt.Registry) error {

	if err := validate.Required("endMs", "body", m.EndMs); err != nil {
		return err
	}

	return nil
}

func (m *Stripe) validateImageLink(formats strfmt.Registry) error {

	if err := validate.Required("imageLink", "body", m.ImageLink); err != nil {
		return err
	}

	return nil
}

func (m *Stripe) validateModel(formats strfmt.Registry) error {

	if err := validate.Required("model", "body", m.Model); err != nil {
		return err
	}

	return nil
}

func (m *Stripe) validateStartMs(formats strfmt.Registry) error {

	if err := validate.Required("startMs", "body", m.StartMs); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this stripe based on context it is used
func (m *Stripe) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Stripe) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Stripe) UnmarshalBinary(b []byte) error {
	var res Stripe
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
